import express from "express";
import bodyParser from "body-parser";

const app = express();
app.use(bodyParser.json());

// simulamos la base de datos en memoria
const tiendas = [
  {
    id: "tienda001",
    nombre: "SuperZapatos",
    phone_number_id: "123456789012345", // el que Meta te da
    config: {
      mensajeBienvenida: "¡Hola! Bienvenido a SuperZapatos.",
    },
  },
  {
    id: "tienda002",
    nombre: "ElectroMundo",
    phone_number_id: "987654321098765",
    config: {
      mensajeBienvenida: "¡Hola! Gracias por contactar a ElectroMundo.",
    },
  },
];

// ruta del webhook
app.post("/webhook", (req, res) => {
  const body = req.body;

  // revisa si es un evento válido
  if (body.object) {
    const entry = body.entry?.[0];
    const change = entry?.changes?.[0];
    const value = change?.value;

    const phoneNumberId = value?.metadata?.phone_number_id;
    const from = value?.messages?.[0]?.from;
    const messageText = value?.messages?.[0]?.text?.body;

    console.log(`Mensaje recibido de ${from}: ${messageText}`);
    console.log(`phone_number_id: ${phoneNumberId}`);

    // identificar la tienda por el phone_number_id
    const tienda = tiendas.find((t) => t.phone_number_id === phoneNumberId);

    if (!tienda) {
      console.log("Número no asociado a ninguna tienda");
      return res.sendStatus(200);
    }

    console.log(`Mensaje asociado a la tienda: ${tienda.nombre}`);

    // lógica de respuesta personalizada
    const respuesta = tienda.config.mensajeBienvenida;

    // enviar la respuesta con el número correspondiente
    fetch(`https://graph.facebook.com/v19.0/${phoneNumberId}/messages`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${process.env.WHATSAPP_TOKEN}`,
      },
      body: JSON.stringify({
        messaging_product: "whatsapp",
        to: from,
        text: { body: respuesta },
      }),
    })
      .then((r) => r.json())
      .then((data) => console.log("Respuesta enviada:", data))
      .catch((err) => console.error("Error enviando respuesta:", err));

    res.sendStatus(200);
  } else {
    res.sendStatus(404);
  }
});

// verifica token de webhook
app.get("/webhook", (req, res) => {
  const mode = req.query["hub.mode"];
  const token = req.query["hub.verify_token"];
  const challenge = req.query["hub.challenge"];

  if (mode && token === process.env.VERIFY_TOKEN) {
    res.status(200).send(challenge);
  } else {
    res.sendStatus(403);
  }
});

// puerto
app.listen(3000, () => {
  console.log("Servidor webhook escuchando en puerto 3000");
});
